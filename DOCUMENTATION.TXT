///Activities

	MainActivity
		> It hosts all the other fragments that can be seen in nav_graph.xml file
		> It implements all of the other fragments, so that their listeners could be used
		> no functions are performed in it apart from it being the NavHost. (NavHost performs the navigation functions via nav_graph.xml)
_____________________________________________________________________________________________________________________________________________________
///Navigation
	
	Navigation
		>contains the application navigation logic.
		>can be used to create new fragments with autogenerated code.
		>can be used to access design xml's used for each of the java classes.
		>can be used to assign different variables that we could use troughout the application (passing timer values, amount of pictures etc.)
_____________________________________________________________________________________________________________________________________________________
///Fragments and their xml, contained buttons variables and actions that link to other fragments.
***********
	AbootUs (fragment_aboot_us.xml) [[[[Lets consider refactoring this]]]]
		>should contain information about our team
			>buttons - none (could make back button)
			>variables - none
			>actions - none

***********
	
	amount (fragment_amount.xml)
		>should contain a method that sets amount of pictures
			>currently has 3 hard coded buttons
				buttonOne
				buttonTwo
				buttonThree
			>variables - should have a variable that sets  picture amount count
				int - that can be adjusted according to the button pressed or slider amount(i'd recommend buttons, but we should talk about this)
			>actions -  amountToPaint
				goes to paint PaintScreen fragment

***********
	
	difficulty(fragment_difficulty.xml)
		>should contain method that sets timer duration
			>currently has 3 hard coded buttons
				buttonEasy
				buttonNormal
				buttonHard
				(should have an area that lets user input custom amount)
			>variables - should have a variable that adjusts timer depending on user pressed button or inputted number.
				double? int?
			>actions -  diffToAmount
				goes to amount fragment
***********
	
	endScreen(fragment_end_screen.xml)
		>Functionality is done.
		>either goes to difficulty or exits app
		>buttons
				1 goes to difficulty, to play again
				2nd button exits

***********

	homeFragment (fragment_home.xml)
		homeToDifficulty could be used to instantiate variables that we assign in other instances!!!!!
		goes to difficulty, about or quit. not much to explain
		

***********
	PaintScrn(fragment_paint_screen.xml)

	should be the place where the magic happens!!
		>has one button, that goes to next screen.
		>toEnd is the navigation action to endScreen.
		>should have a timer on top, with a button for next picture
		(the button and time have to be implemented)
		>should have the actual picture we generated.